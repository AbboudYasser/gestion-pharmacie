# ملف GitHub Actions النهائي: ينشئ config.js من الأسرار ثم ينشر
name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: 🔨 Build Project
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    # ✨✨✨ الخطوة الجديدة والحاسمة ✨✨✨
    - name: 🤫 Create config.js from Secrets
      run: |
        echo "🔐 Creating config.js file from GitHub Secrets..."
        # إنشاء المسار إذا لم يكن موجودًا
        mkdir -p frontend/js
        # كتابة محتوى الملف باستخدام الأسرار
        # سيتم استبدال ${{ secrets.SUPABASE_URL }} بالقيمة الفعلية من أسرار GitHub
        echo "const SUPABASE_URL = '${{ secrets.SUPABASE_URL }}';" > frontend/js/config.js
        echo "const SUPABASE_ANON_KEY = '${{ secrets.SUPABASE_ANON_KEY }}';" >> frontend/js/config.js
        echo "const supabaseClient = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);" >> frontend/js/config.js
        echo "console.log('✅ Supabase config loaded successfully from secrets.');" >> frontend/js/config.js
        echo "✅ config.js created successfully."

    - name: 📦 Install Dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
    
    - name: 🏗️ Build Project
      run: |
        mkdir -p build
        cp -r frontend/* build/
        touch build/.nojekyll
    
    - name: ✅ Validate Build
      run: |
        echo "🔍 Validating build..."
        # الآن هذه الخطوة ستنجح لأن config.js تم إنشاؤه
        if [ -f "build/js/config.js" ]; then
          echo "✅ Found: build/js/config.js"
        else
          echo "❌ Missing required file: build/js/config.js"
          exit 1
        fi
    
    - name: 📤 Upload Build Artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/

  deploy:
    name: 🌐 Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
